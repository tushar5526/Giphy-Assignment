{"version":3,"sources":["components/Loader.jsx","components/Paginate.jsx","components/Giphy.jsx","App.jsx","index.js"],"names":["Loader","className","Paginate","props","pageNumbers","i","Math","ceil","totalItems","itemsPerPage","push","map","number","classes","currentPage","onClick","pageSelected","href","Giphy","useState","data","setData","search","setSearch","isLoading","setIsLoading","isError","setIsError","setCurrentPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","useEffect","axios","params","api_key","limit","results","console","log","setTimeout","fetchData","handleSubmit","event","preventDefault","q","role","renderError","value","onChange","target","type","placeholder","el","key","id","src","images","fixed_height","url","alt","pageNumber","length","App","ReactDOM","render","document","getElementById"],"mappings":";4PAUeA,EARA,WACb,OACE,yBAAKC,UAAU,UACb,uBAAGA,UAAU,mCC8BJC,EAjCE,SAAAC,GAGf,IAFA,IAAMC,EAAc,GAEXC,EAAI,EAAGA,GAAKC,KAAKC,KAAKJ,EAAMK,WAAaL,EAAMM,cAAeJ,IACrED,EAAYM,KAAKL,GAGnB,OACE,6BACE,wBAAIJ,UAAU,uDACXG,EAAYO,KAAI,SAAAC,GACf,IAAIC,EAAU,aAKd,OAJID,IAAWT,EAAMW,cACnBD,GAAW,UAIX,wBAAIZ,UAAWY,GACb,uBACEE,QAAS,kBAAMZ,EAAMa,aAAaJ,IAClCK,KAAK,KACLhB,UAAU,aAETW,U,yyMCnBjB,IA8HeM,EA9HD,WACZ,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAEA,EAAsCR,mBAAS,GAA/C,mBAAOL,EAAP,KAAoBc,EAApB,KACA,EAAwCT,mBAAS,IAAjD,mBAAOV,EAAP,KACMoB,GADN,KACwBf,EAAcL,GAChCqB,EAAmBD,EAAkBpB,EACrCsB,EAAeX,EAAKY,MAAMF,EAAkBD,GAElDI,qBAAU,YACO,uCAAG,2FAChBN,GAAW,GACXF,GAAa,GAFG,kBAKQS,IAAM,yCAA0C,CACpEC,OAAQ,CACNC,QAAS,mCACTC,MAAO,OARG,OAKRC,EALQ,OAYdC,QAAQC,IAAIF,GACZjB,EAAQiB,EAAQlB,KAAKA,MAbP,kDAedO,GAAW,GACXc,YAAW,kBAAMd,GAAW,KAAQ,KAhBtB,QAmBhBF,GAAa,GAnBG,0DAAH,qDAsBfiB,KACC,IAEH,IA6BMC,EAAY,uCAAG,WAAMC,GAAN,8EACnBA,EAAMC,iBACNlB,GAAW,GACXF,GAAa,GAHM,kBAMKS,IAAM,uCAAwC,CAClEC,OAAQ,CAENC,QAAS,mCACTU,EAAGxB,EACHe,MAAO,OAXM,OAMXC,EANW,OAcjBjB,EAAQiB,EAAQlB,KAAKA,MAdJ,kDAgBjBO,GAAW,GACXc,YAAW,kBAAMd,GAAW,KAAQ,KAjBnB,QAoBnBF,GAAa,GApBM,0DAAH,sDA2BlB,OACE,yBAAKxB,UAAU,mBACb,yBAAKA,UAAU,kCA9CC,WAClB,GAAIyB,EACF,OACE,yBACEzB,UAAU,iDACV8C,KAAK,SAFP,yDA4CCC,GACD,0BAAM/C,UAAU,sCACd,2BACEgD,MAAO3B,EACP4B,SAtCiB,SAAAN,GACzBrB,EAAUqB,EAAMO,OAAOF,QAsCfG,KAAK,OACLC,YAAY,kBACZpD,UAAU,2CAEZ,4BACEc,QAAS4B,EACTS,KAAK,SACLnD,UAAU,4CAHZ,WAQF,yBAAKA,UAAU,wBA3EfuB,EACK,kBAAC,EAAD,MAEFO,EAAapB,KAAI,SAAA2C,GACtB,OACE,yBAAKC,IAAKD,EAAGE,GAAIvD,UAAU,OACzB,yBAAKwD,IAAKH,EAAGI,OAAOC,aAAaC,IAAKC,IAAI,cAuE9C,kBAAC,EAAD,CACE7C,aA3Be,SAAA8C,GACnBlC,EAAekC,IA2BXhD,YAAaA,EACbL,aAAcA,EACdD,WAAYY,EAAK2C,WCnHVC,G,MARH,WACV,OACE,6BACE,kBAAC,EAAD,SCFNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8610ddde.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <i className=\"fas fa-spinner fa-4x fa-spin\" />\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\n\nconst Paginate = props => {\n  const pageNumbers = [];\n\n  for (let i = 1; i <= Math.ceil(props.totalItems / props.itemsPerPage); i++) {\n    pageNumbers.push(i);\n  }\n\n  return (\n    <nav>\n      <ul className=\"pagination pagination-sm justify-content-center m-2\">\n        {pageNumbers.map(number => {\n          let classes = \"page-item \";\n          if (number === props.currentPage) {\n            classes += \"active\";\n          }\n\n          return (\n            <li className={classes}>\n              <a\n                onClick={() => props.pageSelected(number)}\n                href=\"!#\"\n                className=\"page-link\"\n              >\n                {number}\n              </a>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nexport default Paginate;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport Loader from \"./Loader\";\nimport Paginate from \"./Paginate\";\n\nconst Giphy = () => {\n  const [data, setData] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [itemsPerPage, setItemsPerPage] = useState(25);\n  const indexOfLastItem = currentPage * itemsPerPage;\n  const indexOfFirstItem = indexOfLastItem - itemsPerPage;\n  const currentItems = data.slice(indexOfFirstItem, indexOfLastItem);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setIsError(false);\n      setIsLoading(true);\n\n      try {\n        const results = await axios(\"https://api.giphy.com/v1/gifs/trending\", {\n          params: {\n            api_key: \"tAEFUgagRjRNkU24orQdFB8EHMcNTUSe\",\n            limit: 100\n          }\n        });\n\n        console.log(results);\n        setData(results.data.data);\n      } catch (err) {\n        setIsError(true);\n        setTimeout(() => setIsError(false), 4000);\n      }\n\n      setIsLoading(false);\n    };\n\n    fetchData();\n  }, []);\n\n  const renderGifs = () => {\n    if (isLoading) {\n      return <Loader />;\n    }\n    return currentItems.map(el => {\n      return (\n        <div key={el.id} className=\"gif\">\n          <img src={el.images.fixed_height.url} alt=\"gif\" />\n        </div>\n      );\n    });\n  };\n  const renderError = () => {\n    if (isError) {\n      return (\n        <div\n          className=\"alert alert-danger alert-dismissible fade show\"\n          role=\"alert\"\n        >\n          Unable to get Gifs, please try again in a few minutes\n        </div>\n      );\n    }\n  };\n\n  const handleSearchChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setIsError(false);\n    setIsLoading(true);\n\n    try {\n      const results = await axios(\"https://api.giphy.com/v1/gifs/search\", {\n        params: {\n          // we could setup .env files as well\n          api_key: \"GlVGYHkr3WSBnllca54iNt0yFbjz7L65\",\n          q: search,\n          limit: 100\n        }\n      });\n      setData(results.data.data);\n    } catch (err) {\n      setIsError(true);\n      setTimeout(() => setIsError(false), 4000);\n    }\n\n    setIsLoading(false);\n  };\n\n  const pageSelected = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"container-fluid main-container\">\n        {renderError()}\n        <form className=\"form-inline justify-content-center\">\n          <input\n            value={search}\n            onChange={handleSearchChange}\n            type=\"text\"\n            placeholder=\"search for GIFs\"\n            className=\"form-control col-sm-8 col-lg-10 col-12\"\n          />\n          <button\n            onClick={handleSubmit}\n            type=\"submit\"\n            className=\"btn btn-dark m-2 col-sm-3 col-4 col-lg-1\"\n          >\n            Search\n          </button>\n        </form>\n        <div className=\"container-fluid gifs\">{renderGifs()}</div>\n      </div>\n      <Paginate\n        pageSelected={pageSelected}\n        currentPage={currentPage}\n        itemsPerPage={itemsPerPage}\n        totalItems={data.length}\n      />\n    </div>\n  );\n};\n\nexport default Giphy;\n","import React from \"react\";\nimport Giphy from \"./components/Giphy\";\nimport \"./App.css\";\nconst App = () => {\n  return (\n    <div>\n      <Giphy />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}